package water.godcoder.module.modules.exploits;

import water.godcoder.module.Module;
import water.godcoder.util.other.*;
import net.minecraft.block.Block;
import net.minecraft.block.BlockPistonExtension;
import net.minecraft.block.BlockPistonMoving;
import net.minecraft.init.SoundEvents;
import net.minecraft.network.play.server.SPacketSoundEffect;
import net.minecraft.util.SoundCategory;

@Module.Info(name = "NoLag", category = Module.Category.EXPLOITS)
public class NoLag extends Module
{
    public final BooleanValue light;
    public final BooleanValue sounds;
    public final BooleanValue pistons;

    public NoLag() {
        this.light = new BooleanValue("Light", new String[] { "Lit" }, true);
        this.sounds = new BooleanValue("Sounds", new String[] { "Sound" }, true);
        this.pistons = new BooleanValue("Pistons", new String[] { "Piston" }, true);
    }

    @Listener
    public void updateLighting(final EventLightUpdate event) {
        if (this.light.getBoolean()) {
            event.setCanceled(true);
        }
    }

    @Listener
    public void renderBlockModel(final EventRenderBlockModel event) {
        if (this.pistons.getBoolean()) {
            final Block block = event.getBlockState().getBlock();
            if (block instanceof BlockPistonMoving || block instanceof BlockPistonExtension) {
                event.setRenderable(false);
                event.setCanceled(true);
            }
        }
    }

    @Listener
    public void receivePacket(final EventReceivePacket event) {
        if (event.getStage() == EventStageable.EventStage.PRE && event.getPacket() instanceof SPacketSoundEffect && this.sounds.getBoolean()) {
            final SPacketSoundEffect packet = (SPacketSoundEffect)event.getPacket();
            if (packet.getCategory() == SoundCategory.PLAYERS && packet.getSound() == SoundEvents.ITEM_ARMOR_EQUIP_GENERIC) {
                event.setCanceled(true);
            }
        }
    }
}
